<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">

        <!-- ===== BOX ICONS ===== -->
        <link href='https://cdn.jsdelivr.net/npm/boxicons@2.0.5/css/boxicons.min.css' rel='stylesheet'>

        <!-- ===== CSS ===== -->
        <link rel="stylesheet" href="css/bootstrap.min.css">   
        <link rel="stylesheet" href="css/datatables.min.css"> 
        <link rel="stylesheet" href="css/styles.css"> 

        <title>Attendance Management System</title>
    </head>  
    <body>
        
        <div class="content" id="main-content">
        </div> 

        <div class="l-navbar" id="nav-bar">  
            <nav class="nav">
                <div>
                    <a href="#" class="nav__logo">
                        <span class="nav__logo-name">Lecturer Page</span>      
                    </a>
 
                    <div class="nav__list">

                        <a href="/" class="nav__link active" onclick="loadTablePage('lecturer/lecturer-dashboard.html','js/lecturer-dashboard.js')"> 
                            <i class='bx bxs-dashboard  nav__icon' ></i>
                            <span class="nav__name">Dashboard</span> 
                        </a>

                        <a href="#" class="nav__link" onclick="loadTablePage('lecturer/lecturer-generate-qr.html','js/lecturerQrGenerator.js')">  
                            <i class='bx bx-grid-alt nav__icon' ></i>
                            <span class="nav__name">Generate QR Code</span> 
                        </a>

                        <a href="#" class="nav__link" onclick="loadTablePage('lecturer/lecturer-monitoring.html','js/lecturerAttendanceMonitoring.js')">  
                            <i class='bx bxs-calendar-alt nav__icon' ></i>
                            <span class="nav__name">Monitor Attendance</span>
                        </a>
                        
                        <a href="#" class="nav__link" onclick="loadContent('/lecturer/getMC.html')">
                            <i class='bx bx-message-square-detail nav__icon'></i>    
                            <span class="nav__name">MC Approval</span>
                        </a>

                        <a href="#" class="nav__link" onclick="loadContent('Report.html')">  
                            <i class='bx bxs-report nav__icon' ></i>
                            <span class="nav__name">Report</span>  
                        </a>  

                        <a href="#" class="nav__link" onclick="loadContent('Setting.html')"> 
                            <i class='bx bx-cog nav__icon' ></i>
                            <span class="nav__name">Settings</span>  
                        </a> 
                    </div>

                </div> 

                <a href="/logout" class="nav__link"> 
                    <i class='bx bx-log-out nav__icon' ></i>
                    <span class="nav__name">Log Out</span>
                </a>
            </nav>
        </div>
        
 
        
        <!--===== MAIN JS =====--> 
        <script src="js/main.js"></script>
        <script src="js/jquery.min.js"></script>
        <script src="js/qrcode.js"></script>  

        <script>  

            

            // Immediately show the sidebar without requiring any click event
            const navBar = document.getElementById('nav-bar'); 
            if (navBar) {
                navBar.classList.add('show');
            }

            var userEmail = "<%= user.email %>"; 
            console.log(userEmail);

            // Immediately show dashboard page when onload without any click event
            document.addEventListener("DOMContentLoaded", function() {
                const dashboardLink = document.querySelector('.nav__link.active');
                if (dashboardLink) {
                    loadTablePage('lecturer/lecturer-dashboard.html', 'js/lecturer-dashboard.js');
                }
            });
            

             function fetchPageContent(event, pageURL) { 
                 event.preventDefault(); // Prevent default behavior 
                
                 fetch(pageURL)
                     .then(response => response.text())
                     .then(data => {
                         var doc = new DOMParser().parseFromString(data, 'text/html');
                         var newContent = doc.querySelector("#main-content").innerHTML;          
                         document.getElementById("main-content").innerHTML = newContent;
                     })
                     .catch(error => console.error('Error fetching page content:', error));
             }


            
             // monitoring attendance page   
             function loadTablePage(page) {
                 fetchPageContent(event, page); 
                 loadDataTablesScripts();  
             }

             function loadDataTablesScripts() {
                 const head = document.getElementsByTagName('head')[0];
                 const scriptsToRemove = head.querySelectorAll('script[data-remove-on-reload]');

                 // Remove all previously loaded script elements
                 scriptsToRemove.forEach(script => {
                     script.parentNode.removeChild(script); 
                 });

                 const scripts = [
                     'js/data-table/jquery-3.6.0.min.js',
                     'js/data-table/datatables.min.js',
                     'js/data-table/pdfmake.min.js',
                     'js/data-table/vfs_fonts.js',
                     'js/data-table/custom.js',
                     'js/lecturerAttendanceMonitoring.js'
                 ];

                 // Function to load each script sequentially
                 function loadScript(index) {
                     if (index >= scripts.length) return; // Exit if all scripts are loaded 
                     const scriptTag = document.createElement('script');
                     scriptTag.src = scripts[index];
                     scriptTag.setAttribute('data-remove-on-reload', 'true'); // Add a custom attribute to mark for removal
                     scriptTag.onload = function() {
                         loadScript(index + 1); // Load next script after current one is loaded
                     };
                     head.appendChild(scriptTag);
                 }

                 // Start loading scripts from the beginning of the array
                 loadScript(0);
             }
            
            function fetchPageContent(event, pageURL) { 
                event.preventDefault(); // Prevent default behavior 
                
                fetch(pageURL)
                    .then(response => response.text())
                    .then(data => {
                        var doc = new DOMParser().parseFromString(data, 'text/html');
                        var newContent = doc.querySelector("#main-content").innerHTML;          
                        document.getElementById("main-content").innerHTML = newContent;
                    })
                    .catch(error => console.error('Error fetching page content:', error));
            }

            function loadTablePage(page,scriptPage) {
                fetchPageContent(event, page); 
                loadDataTablesScripts(scriptPage);  
            }
            

            function loadDataTablesScripts(scriptPage) {  
                const head = document.getElementsByTagName('head')[0];
                const scriptsToRemove = head.querySelectorAll('script[data-remove-on-reload]');

                // Remove all previously loaded script elements
                scriptsToRemove.forEach(script => {
                    script.parentNode.removeChild(script); 
                });

                const scripts = [
                    'js/data-table/jquery-3.6.0.min.js',
                    'js/data-table/datatables.min.js',
                    'js/data-table/pdfmake.min.js',
                    'js/data-table/vfs_fonts.js',
                    'js/data-table/custom.js',
                ];

                // Function to load each script sequentially
                function loadScript(index) {
                    if (index >= scripts.length) return; // Exit if all scripts are loaded 
                    const scriptTag = document.createElement('script');
                    scriptTag.src = scripts[index];
                    scriptTag.setAttribute('data-remove-on-reload', 'true'); // Add a custom attribute to mark for removal
                    scriptTag.onload = function() {
                        loadScript(index + 1); // Load next script after current one is loaded
                    };
                    head.appendChild(scriptTag);
                }

                // Start loading scripts from the beginning of the array
                loadScript(0);

                const uniqueScript = document.createElement('script');
                uniqueScript.src = scriptPage; 
                uniqueScript.setAttribute('data-remove-on-reload', 'true');
                head.appendChild(uniqueScript);  

            } 


            // Function to load HTML content into the main content area
            function loadContent(page) {
                var xhttp = new XMLHttpRequest();
                xhttp.onreadystatechange = function() {
                    if (this.readyState == 4 && this.status == 200) {
                        document.getElementById("main-content").innerHTML = this.responseText;
                    }
                };
                xhttp.open("GET", page, true);
                xhttp.send();
            }
        </script>

    </body>
</html>